<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>Eclipse Continuous Blogging Initiative</title><description>Blog about all the things regarding CBI and Releng at the Eclipse Foundation</description><link>https://eclipse.dev/cbi/</link><atom:link href="https://eclipse.dev/cbi/feed_rss_updated.xml" rel="self" type="application/rss+xml" /><language>en</language> <pubDate>Sat, 12 Jul 2025 00:11:30 -0000</pubDate> <lastBuildDate>Sat, 12 Jul 2025 00:11:30 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.17.3</generator> <image> <url>None</url> <title>Eclipse Continuous Blogging Initiative</title><link>https://eclipse.dev/cbi/</link> </image> <item> <title>Welcome to the first post of the CBI blog</title> <author>Frederic Gurr</author> <description>&lt;p&gt;Here is a short overview of what we are planning to do with this blog and CBI in general in 2025.&lt;/p&gt;&lt;h2 id=&#34;continuous-blogging-initiative&#34;&gt;Continuous Blogging Initiative&lt;/h2&gt;&lt;p&gt;One of our annual objectives is to improve communication about CBI and Release Engineering (Releng) topics. The CBI blog is an important part of this objective and should give our community more insight into what has happened and what will happen in the future in ‚Äúreleng land‚Äù. It will involve a good amount of ‚Äúlearning on the job‚Äù and we will adjust content and technical details as we see fit.&lt;/p&gt;&lt;p&gt;The current plan is to have:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;One blog post per month (schedule: TBD)&lt;/li&gt;&lt;li&gt;Topics: status updates, road map insights, best practices, technical details&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;cbi-in-general&#34;&gt;CBI in general&lt;/h2&gt;&lt;p&gt;Our three main objectives for 2025 are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;More monitoring&lt;/li&gt;&lt;li&gt;Modernizing releng services&lt;/li&gt;&lt;li&gt;Enhance communication&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;We already mentioned enhanced communication above, and you are currently reading one of the results. Another step stone for better communication is a central page for CBI related topics that should make it a lot easier for everyone to find information and documentation that is distributed across multiple locations. This central page can be reached at &lt;a href=&#34;https://eclipse.dev/cbi&#34;&gt;https://eclipse.dev/cbi&lt;/a&gt; and its sources can be found at &lt;a href=&#34;https://github.com/eclipse-cbi/cbi-website&#34;&gt;https://github.com/eclipse-cbi/cbi-website&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;We will talk more about monitoring and modernization in future blog posts&lt;/p&gt;</description><link>https://eclipse.dev/cbi/blog/2025/01/31/2025-01-31_first-post/</link> <pubDate>Wed, 25 Jun 2025 14:22:44 +0000</pubDate><source url="https://eclipse.dev/cbi/feed_rss_updated.xml">Eclipse Continuous Blogging Initiative</source><guid isPermaLink="true">https://eclipse.dev/cbi/blog/2025/01/31/2025-01-31_first-post/</guid> <enclosure url="https://eclipse.dev/cbi/assets/images/social/blog/posts/2025-01-31_first-post.png" type="image/png" length="68007" /> </item> <item> <title>Develocity Evaluation Phase: Presentation with Gradle on Optimizing Pipelines for Eclipse Projects</title> <author>S√©bastien Heurtematte</author> <description>&lt;p&gt;The Eclipse releng team is currently evaluating throw the &lt;a href=&#34;https://develocity-staging.eclipse.org&#34;&gt;Develocity staging instance&lt;/a&gt; the relevance of the &lt;a href=&#34;https://gradle.com/develocity/&#34;&gt;Develocity platform&lt;/a&gt; by &lt;strong&gt;Gradle Inc&lt;/strong&gt; in understanding and optimizing their pipelines.&lt;/p&gt;&lt;p&gt;On Thursday, February 6, a dedicated presentation was held in collaboration with &lt;strong&gt;Gasper Kojek&lt;/strong&gt; from &lt;strong&gt;Gradle&lt;/strong&gt; to explore the platform&#39;s capabilities and discuss how it could benefit both Eclipse projects and the releng team in addressing build challenges.&lt;/p&gt;&lt;p&gt;The session focused on the challenges, the evaluation phase, Develocity‚Äôs features and how it could enhance build performance, visibility, and reliability across Eclipse projects.&lt;/p&gt;&lt;p&gt;üé• &lt;a href=&#34;https://youtu.be/YWIbzmNFJVM&#34;&gt;Watch the Presentation&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&#34;https://youtu.be/YWIbzmNFJVM&#34;&gt;&lt;img alt=&#34;Watch the Presentation&#34; src=&#34;https://img.youtube.com/vi/YWIbzmNFJVM/0.jpg&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Please find below a summary from this session.&lt;/p&gt;&lt;h2 id=&#34;1-challenges-in-cicd-for-eclipse-projects&#34;&gt;1. Challenges in CI/CD for Eclipse Projects&lt;/h2&gt;&lt;p&gt;Eclipse projects face several build-related challenges, including:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Slow Build Identification&lt;/strong&gt;: Detecting bottlenecks in pipelines is difficult without proper monitoring.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Limited Build Performance Visibility&lt;/strong&gt;: Internal metrics (CPU, RAM, network usage) are not widely accessible, making debugging harder.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Build Failures &amp;amp; Flakiness&lt;/strong&gt;: Unstable builds reduce trust in CI services and require significant debugging effort.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Infrastructure Constraints&lt;/strong&gt;: Projects operate in a shared environment with limited resources, requiring efficient caching, parallelization, and optimization to maintain performance without increasing infrastructure costs.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Projects need pipelines that are &lt;strong&gt;Fast, Safe, and Reliable&lt;/strong&gt;.&lt;/p&gt;&lt;h2 id=&#34;2-develocity-evaluation-phase&#34;&gt;2. Develocity Evaluation Phase&lt;/h2&gt;&lt;p&gt;The evaluation phase of Develocity started in January and runs until March, with a possible extension to June.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Platform Access: &lt;a href=&#34;https://develocity-staging.eclipse.org&#34;&gt;https://develocity-staging.eclipse.org&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Current Participating Projects: &lt;strong&gt;Mylyn, ESCET, Graphene, Buildship, Glassfish&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Post-Evaluation Goals:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Community Feedback&lt;/strong&gt;: Assess Develocity&#39;s value through user input and surveys.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Infrastructure Impact&lt;/strong&gt;: Evaluate impact on storage, CPU, and memory usage. And assess the effort needed to maintain Develocity operationally.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;3-what-is-develocity&#34;&gt;3. What is Develocity?&lt;/h2&gt;&lt;p&gt;Develocity is a data platform &amp;amp; acceleration engine designed to improve developer productivity by providing insights into CI builds and enabling faster, more reliable builds.&lt;/p&gt;&lt;h3 id=&#34;31-build-insights-build-scans&#34;&gt;3.1 Build Insights (Build Scans)&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Provides detailed build reports (dependencies, executed tasks, system metrics).&lt;/li&gt;&lt;li&gt;Allows failure debugging through deep log analysis.&lt;/li&gt;&lt;li&gt;Helps track long-term build performance trends.&lt;/li&gt;&lt;li&gt;Supports Maven, Gradle, Bazel, SBT, NPM, Python, and Tycho (support in progress).&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;32-build-acceleration-technologies&#34;&gt;3.2 Build Acceleration Technologies&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Build Caching&lt;/strong&gt;: avoids redundant work by reusing previous results.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Predictive Test Selection&lt;/strong&gt;: Uses machine learning to run only relevant tests.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Test Distribution&lt;/strong&gt;: Distributes tests across multiple agents for faster execution.&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;33-real-world-example&#34;&gt;3.3 Real-world Example:&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Eclipse Store project reduced build time from 11 minutes to 50 seconds using build caching.&lt;/li&gt;&lt;li&gt;Eclipse Jetty tests went from 47 minutes to 16 minutes with test distribution.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;4-live-demo-highlights&#34;&gt;4. Live Demo Highlights&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Develocity Dashboard&lt;/strong&gt;: Showed CI performance metrics, failure rates, and test flakiness.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Dependency Resolution View&lt;/strong&gt;: Helped track package versions and transitive dependencies.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Flaky Test Analysis&lt;/strong&gt;: Identified test inconsistencies across multiple CI runs.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Performance Optimization&lt;/strong&gt;: Demonstrated time saved by caching and test parallelization.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;5-key-takeaways&#34;&gt;5. Key Takeaways:&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Develocity provides better CI visibility and performance optimization.&lt;/li&gt;&lt;li&gt;It helps reduce build times, improve reliability/consistency, and optimize resource usage.&lt;/li&gt;&lt;li&gt;The evaluation phase is ongoing, and projects are encouraged to participate.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;how-to-join-the-develocity-evaluation-phase&#34;&gt;How to Join the Develocity Evaluation Phase?&lt;/h2&gt;&lt;p&gt;Create a &lt;a href=&#34;https://gitlab.eclipse.org/eclipsefdn/helpdesk/-/issues/new&#34;&gt;HelpDesk ticket&lt;/a&gt; to onboard your project.&lt;/p&gt;&lt;h2 id=&#34;additional-resources&#34;&gt;Additional Resources:&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Develocity Evaluation Platform: &lt;a href=&#34;https://develocity-staging.eclipse.org&#34;&gt;https://develocity-staging.eclipse.org&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Provide feedback to help assess Develocity: &lt;a href=&#34;https://gitlab.eclipse.org/eclipsefdn/helpdesk/-/issues/5408&#34;&gt;https://gitlab.eclipse.org/eclipsefdn/helpdesk/-/issues/5408&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Documentation: &lt;a href=&#34;https://eclipse-cbi.github.io/cbi-website/develocity/readme/index.html&#34;&gt;https://eclipse-cbi.github.io/cbi-website/develocity/readme/index.html&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>https://eclipse.dev/cbi/blog/2025/02/12/2025-02-12_develocity/</link> <pubDate>Wed, 25 Jun 2025 14:22:44 +0000</pubDate><source url="https://eclipse.dev/cbi/feed_rss_updated.xml">Eclipse Continuous Blogging Initiative</source><guid isPermaLink="true">https://eclipse.dev/cbi/blog/2025/02/12/2025-02-12_develocity/</guid> <enclosure url="https://eclipse.dev/cbi/assets/images/social/blog/posts/2025-02-12_develocity.png" type="image/png" length="74220" /> </item> <item> <title>GitHub/GitLab: Decision Matrix Part 1 - Understanding CI Differences</title> <author>S√©bastien Heurtematte</author> <description>&lt;p&gt;The Eclipse Foundation gives projects the freedom to choose between &lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt; and &lt;a href=&#34;https://gitlab.eclipse.org&#34;&gt;GitLab&lt;/a&gt; for hosting and managing their source code.&lt;/p&gt;&lt;p&gt;While both platforms are built on the same underlying Git technology, their platform approach brings a range of additional features.Some of these features overlap, addressing common project needs (with subtle implementation differences), while others take entirely different approaches.&lt;/p&gt;&lt;h2 id=&#34;what-this-blog-post-series-will-cover&#34;&gt;What This Blog Post Series Will Cover&lt;/h2&gt;&lt;p&gt;The next blog posts will dive into these differences, with a purely technical focus for developers, DevOps engineers, and infrastructure teams.The goal? Highlighting key differences in approach, implementation, and alternative services provided by the Foundation.&lt;/p&gt;&lt;p&gt;We will cover the following topics in the next blog posts:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;CI pipelines (GitHub Workflows, GitLab Runners)&lt;/li&gt;&lt;li&gt;Runner management and execution environments&lt;/li&gt;&lt;li&gt;Quota models and build resource allocation&lt;/li&gt;&lt;li&gt;Additional build-related services&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;what-this-blog-post-series-will-not-cover&#34;&gt;What This Blog Post Series Will not Cover&lt;/h2&gt;&lt;p&gt;To keep things focused and digestible, we won‚Äôt be covering broader topics such as:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Project visibility/SEO&lt;/li&gt;&lt;li&gt;Data sovereignty and compliance&lt;/li&gt;&lt;li&gt;Community engagement and contribution models&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;While these are critical considerations when selecting a platform, they deserve their own dedicated posts.&lt;/p&gt;&lt;p&gt;Before we jump into the details, it‚Äôs important to note that the versions of GitHub and GitLab offered by the Eclipse Foundation are enterprise-grade:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;GitHub Enterprise&lt;/li&gt;&lt;li&gt;GitLab Ultimate&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This is crucial because these versions unlock advanced features, such as extended security options; extra build times, that are not available in the public/community versions.&lt;/p&gt;&lt;h2 id=&#34;github-actions-gitlab-ci-and-jenkins&#34;&gt;GitHub Actions, GitLab CI, and Jenkins&lt;/h2&gt;&lt;p&gt;GitHub Actions and GitLab CI are very similar in structure, syntax, and functionality:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;In both cases, CI/CD configuration files are written in YAML and stored closed to the code in the Git repository.&lt;/li&gt;&lt;li&gt;Both are event-driven and get triggered by pushes, PR/MR, tags, issues, or on a schedule.&lt;/li&gt;&lt;li&gt;Tasks can be defined in stages (e.g. build, test, publish, deploy).&lt;/li&gt;&lt;li&gt;Both allow templating or re-use of tasks.&lt;/li&gt;&lt;li&gt;Both feature plenty of integrations (via the &lt;a href=&#34;https://github.com/marketplace&#34;&gt;GitHub Marketplace&lt;/a&gt; or &lt;a href=&#34;https://gitlab.com/guided-explorations/ci-cd-plugin-extensions&#34;&gt;GitLab CI extensions&lt;/a&gt;).While the GitHub Marketplace has more actions, GitLab has built-in security and governance checks.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;At the end of the day, it‚Äôs a matter of preference. For most common CI tasks, both systems are equally easy to write, maintain, and execute.Implementing specific use-cases can require more in-depth knowledge and might have a steep learning curve. &lt;/p&gt;&lt;p&gt;The Eclipse Foundation also offers a fully managed &lt;a href=&#34;https://ci.eclipse.org&#34;&gt;Jenkins instance for every project&lt;/a&gt;. It easily integrates with either GitHub or GitLab and provides an additional CI/CD approach.Jenkins can be used instead of GitHub actions or GitLab CI, but also in combination with each respective system. Due to its &lt;a href=&#34;https://plugins.jenkins.io/&#34;&gt;plugin-based structure&lt;/a&gt;, many scenarios can be covered.&lt;/p&gt;&lt;h2 id=&#34;who-manages-the-runners&#34;&gt;Who Manages the Runners?&lt;/h2&gt;&lt;p&gt;GitLab CI relies on dedicated runners, deployed and managed by the Eclipse Foundation Releng team. Runners are provisioned with &lt;a href=&#34;https://gitlab.eclipse.org/eclipsefdn/it/releng/gitlab-runner-service/gitlab-runner-as-code&#34;&gt;GRaC (GitLab Runner as Code)&lt;/a&gt;and all requests for GitLab CI require a &lt;a href=&#34;https://gitlab.eclipse.org/eclipsefdn/helpdesk/-/issues/new&#34;&gt;Helpdesk ticket&lt;/a&gt; so that the Releng team can provision and configure runners.&lt;/p&gt;&lt;p&gt;Standard GitHub runners offered to public projects for free do not require maintenance from the Releng team.&lt;a href=&#34;https://docs.github.com/en/actions/using-github-hosted-runners/using-larger-runners/about-larger-runners&#34;&gt;Larger and more powerful GitHub runners&lt;/a&gt; can be set up on demand with sponsoring from eligible Eclipse member organizations.&lt;/p&gt;&lt;h2 id=&#34;where-are-my-builds-running&#34;&gt;Where Are My Builds Running?&lt;/h2&gt;&lt;p&gt;The Eclipse Foundation‚Äôs build infrastructure is running on an OKD Kubernetes cluster (the upstream community project of OpenShift) on-premises.&lt;/p&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/eclipse-cbi/cbi/wiki#gitlab-runners&#34;&gt;GitLab CI/CD runners&lt;/a&gt; and Jenkins builds are executed within the Eclipse Foundation‚Äôs build cluster, located in Canada.GitHub Actions runners, run on GitHub‚Äôs cloud infrastructure.&lt;/p&gt;&lt;p&gt;The infrastructure where the runners are executed is essential because, as we will see later, it can have security implications depending on the measures implemented within these environments.&lt;/p&gt;&lt;h2 id=&#34;external-runners&#34;&gt;External Runners&lt;/h2&gt;&lt;p&gt;Projects can ask to connect their own runners when they need:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Higher performance (more CPU/RAM) than default runner configuration can provide&lt;/li&gt;&lt;li&gt;Custom execution environments: RISC-V, ARM, ...&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This requires a &lt;a href=&#34;https://gitlab.eclipse.org/eclipsefdn/helpdesk/-/issues/new&#34;&gt;Helpdesk ticket&lt;/a&gt; and approval from the Eclipse Foundation security team.&lt;/p&gt;&lt;h2 id=&#34;next-posts&#34;&gt;Next posts&lt;/h2&gt;&lt;p&gt;That wraps up this first article! In future posts, we will cover:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Resource Quotas&lt;/li&gt;&lt;li&gt;Build images&lt;/li&gt;&lt;li&gt;Secrets management&lt;/li&gt;&lt;li&gt;Hosting static website&lt;/li&gt;&lt;li&gt;Advanced security policies&lt;/li&gt;&lt;/ul&gt;</description><link>https://eclipse.dev/cbi/blog/2025/03/31/2025-03-31_github_gitlab/</link> <pubDate>Wed, 25 Jun 2025 14:22:44 +0000</pubDate><source url="https://eclipse.dev/cbi/feed_rss_updated.xml">Eclipse Continuous Blogging Initiative</source><guid isPermaLink="true">https://eclipse.dev/cbi/blog/2025/03/31/2025-03-31_github_gitlab/</guid> <enclosure url="https://eclipse.dev/cbi/assets/images/social/blog/posts/2025-03-31_github_gitlab.png" type="image/png" length="67239" /> </item> </channel></rss>